@use "../general" as *;
@use "../mixins" as *;

.container {
  background-color: $light-bg;
  height: 100vh;
}

.boardContainerGrid {
  display: grid;
  grid-template-columns: 20% auto;
  grid-template-rows: auto 1fr;
  grid-template-areas:
    "logoArea selectedBoardArea"
    "boardSelectionArea selectedBoardArea";
  column-gap: 0.3rem;
  height: 100%;
  position: relative;

  .logoArea {
    grid-area: logoArea;
    padding-block: $md-space + 0.75;
    padding-inline: $md-space;
    background-color: $white;
    display: flex;
    align-items: center;
    box-sizing: border-box;
  }

  .boardSelectionArea {
    padding-top: $md-space;
    background-color: $white;
    transition: 0.5s;
  }

  .hide {
    transform: translateX(-100%);
  }

  .toggle {
    background-color: $primary;
    transform: translateX(22.5%);
    padding-block: $md-space;
    padding-left: $md-space;
    border-radius: 0 15rem 15rem 0;
    transition: 0.5s;

    button {
      transform: translateX(200%);
      opacity: 0;
    }
    svg {
      transform: translateX(1350%);
    }
  }

  .boardSelectionArea .boardSelectionWrapper {
    grid-area: boardSelectionArea;
    display: grid;
    grid-template-columns: 1fr;

    .allBoardsMdBody {
      @include sm-heading($capital: true);
      margin-bottom: $sm-space;
      padding-left: $md-space;
    }

    .boardsWrapper .boards {
      @include md-heading;
      display: flex;
      flex-direction: column;
      list-style: none;
    }

    .board {
      display: flex;
      gap: $sm-space;
      align-items: center;
      padding-block: 1rem;
      padding-left: $md-space;
      border-radius: 0 15rem 15rem 0;

      button {
        color: $md-grey;
        background-color: transparent;
        border: none;
        align-self: center;
        text-transform: capitalize;
        cursor: pointer;
      }
    }

    .active {
      background-color: $primary;
      color: white;

      button {
        color: $white;
        background-color: transparent;
        border: none;
        align-self: center;
      }
    }

    .newBoardButton > button {
      color: $primary;
    }

    .boardPanelOptions {
      margin-top: 30rem;
      padding-left: $md-space;
      align-self: end;
      display: flex;
      flex-direction: column;
    }
  }

  .selectedBoardArea {
    grid-area: selectedBoardArea;
    background-color: $light-bg;
    display: flex;
    flex-direction: column;
    transition: 0.5s;
  }

  .createNewBoardWrapper {
    text-align: center;
    text-transform: uppercase;
    margin-top: 1rem;
    font-family: $font-family;
  }

  .hide2 {
    transform: translateX(-20%);
  }

  .selectedBoardArea .selectedBoardOptionsWrapper {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-block: $md-space;
    padding-inline: $md-space;
    background-color: white;

    .selectedBoardNameXl {
      @include xl-heading;
      text-transform: capitalize;
    }

    .newTaskWrapper {
      display: flex;
      align-items: center;
      gap: $sm-space;
    }

    .newTaskWrapper .newTaskBtn {
      @include btn;
    }

    .newTaskWrapper .menuBtn {
      border: none;
      cursor: pointer;
    }
  }
}

/* switch styling start */

.switchWrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: $md-space;
  background-color: $light-bg;
  width: min(100% - $md-space);
  padding-block: $sm-space - 0.5;
  margin-bottom: $sm-space;
}

.switchWrapper .switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}

.switchWrapper .switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: $primary;
  -webkit-transition: 0.4s;
  transition: 0.4s;
}

.slider:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: $white;
  -webkit-transition: 0.4s;
  transition: 0.4s;
}

input:checked + .slider {
  background-color: $md-grey;
}

input:focus + .slider {
  box-shadow: 0 0 1px $primary;
}

input:checked + .slider:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}

.hideSideBarWrapper {
  display: flex;
  align-items: center;
  gap: $sm-space;
  margin-bottom: $md-space;
}

.hideSideBarWrapper button {
  @include md-heading;
  color: $md-grey;
  background-color: transparent;
  border: none;
  cursor: pointer;
  text-transform: capitalize;
}
/* end of switch styling */
